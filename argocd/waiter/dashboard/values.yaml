prometheus:
  prometheusSpec:
    externalUrl: https://dashboard.internal.bacchus.io/prometheus
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi
      limits:
        cpu: 1000m
        memory: 2Gi
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 100Gi
    retention: 30d

alertmanager:
  enableFeatures:
    - auto-gomaxprocs
    - auto-gomemlimit
  alertmanagerSpec:
    externalUrl: https://dashboard.internal.bacchus.io/alertmanager
    alertmanagerConfigSelector:
      matchLabels:
        release: dashboard
    alertmanagerConfigMatcherStrategy:
      type: None
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        memory: 128Mi
    storage:
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOncePod
          resources:
            requests:
              storage: 10Gi

grafana:
  imageRenderer:
    grafanaProtocol: https

  grafana.ini:
    server:
      domain: dashboard.internal.bacchus.io
      root_url: "https://%(domain)s"

    auth:
      disable_login_form: true

    auth.generic_oauth:
      enabled: true
      allow_sign_up: true
      client_id: bacchus-grafana
      client_secret: "$__file{/etc/secrets/dex-auth/secret}"
      scopes: openid email profile groups
      api_url: https://auth.bacchus.io/dex/userinfo
      auth_url: https://auth.bacchus.io/dex/auth
      token_url: https://auth.bacchus.io/dex/token
      # dex does not include indirect groups, we must enumerate every group
      role_attribute_path: >
        contains(groups[*], 'regular-members@bacchus.snucse.org') && 'Editor' ||
        contains(groups[*], 'intern-members@bacchus.snucse.org') && 'Viewer' ||
        contains(groups[*], 'suspended-members@bacchus.snucse.org') && 'Viewer' ||
        contains(groups[*], 'alumni-members@bacchus.snucse.org') && 'Viewer'

    security:
      disable_initial_admin_creation: true

  extraSecretMounts:
    - name: dex-auth
      secretName: dex-auth
      mountPath: /etc/secrets/dex-auth
      readOnly: true

# Not available, we use cilium kube-proxy replacement
kubeProxy:
  enabled: false

# Talos binds these services to localhost.
# We could update the Talos config to allow scraping metrics.
kubeScheduler:
  enabled: false
  #service:
  #  selector:
  #    k8s-app: kube-scheduler
kubeControllerManager:
  enabled: false
  #service:
  #  selector:
  #    k8s-app: kube-controller-manager
